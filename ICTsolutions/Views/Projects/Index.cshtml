@using ICTsolutions.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@model IEnumerable<ICTsolutions.Models.Project>

@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@if (SignInManager.IsSignedIn(User) && User.IsInRole("Manager"))
{
    <div class="createNewProjectButton">
        <a asp-action="Create" type="button" class="btn btn-outline-primary">Create New</a>
    </div>
}


@*<button id="button1" style="display:block" onclick="document.getElementById('button2').style.display = 'block'; this.style.display = 'none';">Button 1</button>
<button id="button2" style="display:none;" onclick="document.getElementById('button1').style.display = 'block'; this.style.display = 'none';">Button 2</button>
*@

<div class="availableButton">
    <a asp-action="GetAvailableProjects" type="button" id="availableButton" class="btn btn-outline-info">Available Projects</a>
</div>

<p> 
    <a asp-action="Index" type="button" id="backToPojectButton" class="btn btn-outline-dark">Back to Projects page</a>
</p>



<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectManager)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.amountMembers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sources)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProgramingLanguage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Payment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectManager)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.amountMembers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sources)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProgramingLanguage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Payment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>

            @*search for signinmanager specific roles*@


                @if (SignInManager.IsSignedIn(User) && User.IsInRole("Manager"))
                {
                    <td class="btn-group" role="group" aria-label="Side buttons">
                        <a asp-action="Edit" asp-route-id="@item.Id" type="button" class="btn btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" type="button" class="btn btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" type="button" class="btn btn-danger">Delete</a>
                    </td>                   
                }

                else 
                {
                     <td>
                        <a asp-action="Details" asp-route-id="@item.Id" type="button" class="btn btn-info">Details</a>
                    </td>
                }
        </tr>


}
    </tbody>
</table>
